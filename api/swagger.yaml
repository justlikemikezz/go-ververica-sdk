---
swagger: "2.0"
info:
  description: "The Ververica Platform APIs, excluding Application Manager."
  version: "2.0.0"
  title: "Ververica Platform API"
  contact:
    name: "Ververica GmbH"
    url: "https://www.ververica.com"
    email: "platform@ververica.com"
  license:
    name: "Proprietary"
host: "ververica.prod.bird.co"
basePath: "/"
tags:
- name: "api-tokens"
  description: "Api Tokens"
- name: "namespaces"
  description: "Namespaces"
paths:
  /apitokens/v1/namespaces/{ns}/apitokens:
    get:
      tags:
      - "api-tokens"
      summary: "listApiTokens"
      operationId: "listApiTokensUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "ns"
        in: "path"
        description: "ns"
        required: true
        type: "string"
        x-exportParamName: "Ns"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ListApiTokensResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "api-tokens"
      summary: "createApiToken"
      operationId: "createApiTokenUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "apiToken"
        description: "apiToken"
        required: true
        schema:
          $ref: "#/definitions/ApiToken"
        x-exportParamName: "ApiToken"
      - name: "ns"
        in: "path"
        description: "ns"
        required: true
        type: "string"
        x-exportParamName: "Ns"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CreateApiTokenResponse"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /apitokens/v1/namespaces/{ns}/apitokens/{apiTokenName}:
    get:
      tags:
      - "api-tokens"
      summary: "getApiToken"
      operationId: "getApiTokenUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "apiTokenName"
        in: "path"
        description: "apiTokenName"
        required: true
        type: "string"
        x-exportParamName: "ApiTokenName"
      - name: "ns"
        in: "path"
        description: "ns"
        required: true
        type: "string"
        x-exportParamName: "Ns"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/GetApiTokenResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "api-tokens"
      summary: "deleteApiToken"
      operationId: "deleteApiTokenUsingDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "apiTokenName"
        in: "path"
        description: "apiTokenName"
        required: true
        type: "string"
        x-exportParamName: "ApiTokenName"
      - name: "ns"
        in: "path"
        description: "ns"
        required: true
        type: "string"
        x-exportParamName: "Ns"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/DeleteApiTokenResponse"
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /namespaces/v1/namespaces:
    get:
      tags:
      - "namespaces"
      summary: "listNamespaces"
      operationId: "listNamespacesUsingGET"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ListNamespacesResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "namespaces"
      summary: "createNamespace"
      operationId: "createNamespaceUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "namespace"
        description: "namespace"
        required: true
        schema:
          $ref: "#/definitions/Namespace"
        x-exportParamName: "Namespace"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CreateNamespaceResponse"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /namespaces/v1/namespaces/{ns}:
    get:
      tags:
      - "namespaces"
      summary: "getNamespace"
      operationId: "getNamespaceUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "ns"
        in: "path"
        description: "ns"
        required: true
        type: "string"
        x-exportParamName: "Ns"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/GetNamespaceResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "namespaces"
      summary: "updateNamespace"
      operationId: "updateNamespaceUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "namespace"
        description: "namespace"
        required: true
        schema:
          $ref: "#/definitions/Namespace"
        x-exportParamName: "Namespace"
      - name: "ns"
        in: "path"
        description: "ns"
        required: true
        type: "string"
        x-exportParamName: "Ns"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/UpdateNamespaceResponse"
        "201":
          description: "Created"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "namespaces"
      summary: "deleteNamespace"
      operationId: "deleteNamespaceUsingDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ns"
        in: "path"
        description: "ns"
        required: true
        type: "string"
        x-exportParamName: "Ns"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/DeleteNamespaceResponse"
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
definitions:
  ApiToken:
    type: "object"
    properties:
      createTime:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      role:
        type: "string"
      secret:
        type: "string"
    title: "ApiToken"
    example:
      role: "role"
      createTime: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      secret: "secret"
  CreateApiTokenResponse:
    type: "object"
    properties:
      apiToken:
        $ref: "#/definitions/ApiToken"
    title: "CreateApiTokenResponse"
    example:
      apiToken:
        role: "role"
        createTime: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        secret: "secret"
  CreateNamespaceResponse:
    type: "object"
    properties:
      namespace:
        $ref: "#/definitions/Namespace"
    title: "CreateNamespaceResponse"
    example:
      namespace:
        roleBindings:
        - role: "role"
          members:
          - "members"
          - "members"
        - role: "role"
          members:
          - "members"
          - "members"
        createTime: "2000-01-23T04:56:07.000+00:00"
        lifecyclePhase: "LIFECYCLE_PHASE_INVALID"
        name: "name"
  DeleteApiTokenResponse:
    type: "object"
    title: "DeleteApiTokenResponse"
  DeleteNamespaceResponse:
    type: "object"
    properties:
      namespace:
        $ref: "#/definitions/Namespace"
    title: "DeleteNamespaceResponse"
    example:
      namespace:
        roleBindings:
        - role: "role"
          members:
          - "members"
          - "members"
        - role: "role"
          members:
          - "members"
          - "members"
        createTime: "2000-01-23T04:56:07.000+00:00"
        lifecyclePhase: "LIFECYCLE_PHASE_INVALID"
        name: "name"
  GetApiTokenResponse:
    type: "object"
    properties:
      apiToken:
        $ref: "#/definitions/ApiToken"
    title: "GetApiTokenResponse"
    example:
      apiToken:
        role: "role"
        createTime: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        secret: "secret"
  GetNamespaceResponse:
    type: "object"
    properties:
      namespace:
        $ref: "#/definitions/Namespace"
    title: "GetNamespaceResponse"
    example:
      namespace:
        roleBindings:
        - role: "role"
          members:
          - "members"
          - "members"
        - role: "role"
          members:
          - "members"
          - "members"
        createTime: "2000-01-23T04:56:07.000+00:00"
        lifecyclePhase: "LIFECYCLE_PHASE_INVALID"
        name: "name"
  ListApiTokensResponse:
    type: "object"
    properties:
      apiTokens:
        type: "array"
        items:
          $ref: "#/definitions/ApiToken"
    title: "ListApiTokensResponse"
    example:
      apiTokens:
      - role: "role"
        createTime: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        secret: "secret"
      - role: "role"
        createTime: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        secret: "secret"
  ListNamespacesResponse:
    type: "object"
    properties:
      namespaces:
        type: "array"
        items:
          $ref: "#/definitions/Namespace"
    title: "ListNamespacesResponse"
    example:
      namespaces:
      - roleBindings:
        - role: "role"
          members:
          - "members"
          - "members"
        - role: "role"
          members:
          - "members"
          - "members"
        createTime: "2000-01-23T04:56:07.000+00:00"
        lifecyclePhase: "LIFECYCLE_PHASE_INVALID"
        name: "name"
      - roleBindings:
        - role: "role"
          members:
          - "members"
          - "members"
        - role: "role"
          members:
          - "members"
          - "members"
        createTime: "2000-01-23T04:56:07.000+00:00"
        lifecyclePhase: "LIFECYCLE_PHASE_INVALID"
        name: "name"
  Namespace:
    type: "object"
    properties:
      createTime:
        type: "string"
        format: "date-time"
      lifecyclePhase:
        type: "string"
        enum:
        - "LIFECYCLE_PHASE_INVALID"
        - "LIFECYCLE_PHASE_ACTIVE"
        - "LIFECYCLE_PHASE_TERMINATING"
        - "UNRECOGNIZED"
      name:
        type: "string"
      roleBindings:
        type: "array"
        items:
          $ref: "#/definitions/RoleBinding"
    title: "Namespace"
    example:
      roleBindings:
      - role: "role"
        members:
        - "members"
        - "members"
      - role: "role"
        members:
        - "members"
        - "members"
      createTime: "2000-01-23T04:56:07.000+00:00"
      lifecyclePhase: "LIFECYCLE_PHASE_INVALID"
      name: "name"
  RoleBinding:
    type: "object"
    properties:
      members:
        type: "array"
        items:
          type: "string"
      role:
        type: "string"
    title: "RoleBinding"
    example:
      role: "role"
      members:
      - "members"
      - "members"
  UpdateNamespaceResponse:
    type: "object"
    properties:
      namespace:
        $ref: "#/definitions/Namespace"
    title: "UpdateNamespaceResponse"
    example:
      namespace:
        roleBindings:
        - role: "role"
          members:
          - "members"
          - "members"
        - role: "role"
          members:
          - "members"
          - "members"
        createTime: "2000-01-23T04:56:07.000+00:00"
        lifecyclePhase: "LIFECYCLE_PHASE_INVALID"
        name: "name"
